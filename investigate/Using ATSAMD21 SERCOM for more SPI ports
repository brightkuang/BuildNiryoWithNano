* Using ATSAMD21 SERCOM for more SPI, I2C and Serial ports
https://learn.adafruit.com/using-atsamd21-sercom-to-add-more-spi-i2c-serial-ports/overview

ATSAMD21G's ERCOM MUXs:
Pin   Arduino 'Pin'   SERCOM    SERCOM alt  Stepper
-----------------------------------------
PA00  Used by xtal              SERCOM1.0
PA01  Used by xtal              SERCOM1.1
PB08  A1                        SERCOM4.0
PB09  A2                        SERCOM4.1
PA04  A3                        SERCOM0.0
PA05  A4                        SERCOM0.1
PA06  D8                        SERCOM0.2
PA07  D9                        SERCOM0.3
PA08  D4             SERCOM0.0  SERCOM2.0
PA09  D3             SERCOM0.1  SERCOM2.1
PA10  D1             SERCOM0.2  SERCOM2.2  Dir
PA11  D0             SERCOM0.3  SERCOM2.3  Step
PB10  D23 / MOSI                SERCOM4.2        MOSI
PB11  D24 / SCK                 SERCOM4.3        SCK
PA12  D22 / MISO     SERCOM2.0  SERCOM4.0        MISO
PA13  Used by EDBC   SERCOM2.1  SERCOM4.1
PA14  D2             SERCOM2.2  SERCOM4.2
PA15  D5             SERCOM2.3  SERCOM4.3
PA16  D11            SERCOM1.0  SERCOM3.0
PA17  D13            SERCOM1.1  SERCOM3.1
PA18  D10            SERCOM1.2  SERCOM3.2  Error
PA19  D12            SERCOM1.3  SERCOM3.3
PA20  D6             SERCOM5.2  SERCOM3.2
PA21  D7             SERCOM5.3  SERCOM3.3
PA22  D20 / SDA      SERCOM3.0  SERCOM5.0
PA23  D21 / SCL      SERCOM3.1  SERCOM5.1
PA24  Used by USB    SERCOM3.2  SERCOM5.2
PA25  Used by USB    SERCOM3.3  SERCOM5.3
PB22  D30 / EDBG TX             SERCOM5.2  TXD
PB23  D31 / EDBG RX             SERCOM5.3  RXD
PA30  Used by SWCLK             SERCOM1.2
PA31  Used by SWDIO             SERCOM1.3
PB02  A5                        SERCOM5.0
PB03  D25 / RX LED              SERCOM5.1


VIN
Step   D0            SERCOM0.3  SERCOM2.3
Dir    D1            SERCOM0.2  SERCOM2.2
Error  D10           SERCOM1.2  SERCOM3.2
GND
D3     D3            SERCOM0.1  SERCOM2.1
V3.3
TXD    D30                      SERCOM5.2  TXD
RXD    D31                      SERCOM5.3  RXD
GND

SPI_PAD_0_SCK_1 means MOSI is on SERCOMn.0 and SCK is on SERCOMn.1
SPI_PAD_2_SCK_3 means MOSI is on SERCOMn.2 and SCK is on SERCOMn.3
SPI_PAD_3_SCK_1 means MOSI is on SERCOMn.3 and SCK is on SERCOMn.1
SPI_PAD_0_SCK_3 means MOSI is on SERCOMn.0 and SCK is on SERCOMn.3

SERCOM_RX_PAD_0 means MISO on SERCOMn.0
SERCOM_RX_PAD_1 means MISO on SERCOMn.1
SERCOM_RX_PAD_2 means MISO on SERCOMn.2
SERCOM_RX_PAD_3 means MISO on SERCOMn.3

---------------------------------------

#include <SPI.h>
#include "wiring_private.h" // pinPeripheral() function
  
SPIClass mySPI (&sercom2, 1, 0, 3, SPI_PAD_2_SCK_3, SERCOM_RX_PAD_1);
 
void setup() {
  Serial.begin(115200);
 
  // do this first, for Reasons
  mySPI.begin();
 
  // Assign pins 0, 1, 3 to ERCOM & SERCOM_ALT functionality
  pinPeripheral(0, PIO_SERCOM_ALT);
  pinPeripheral(1, PIO_SERCOM_ALT);
  pinPeripheral(3, PIO_SERCOM_ALT);
}
 
uint8_t i=0;
void loop() {
  Serial.println(i);
  mySPI.beginTransaction(SPISettings(8000000, MSBFIRST, SPI_MODE0));
  mySPI.transfer(i++);
  mySPI.endTransaction();
}